{
  "@type" : "alfa.rt.model.Record",
  "Doc" : "A type defining additional information that may be recorded against a message.",
  "Name" : {
    "@type" : "alfa.rt.model.UdtVersionedName",
    "FullyQualifiedName" : "FpML5.pretrade.PartyMessageInformation",
    "UdtType" : "recordType"
  },
  "Includes" : [ ],
  "Source" : {
    "@type" : "alfa.rt.model.Union__ModelBaseNode_Source",
    "Contents" : "/#\n   A type defining additional information that may be recorded against a message.\n #/\nrecord FpML5.pretrade.PartyMessageInformation {\n  # Identifies that party that has ownership of this information.\n  partyReference : FpML5.pretrade.PartyReference?\n\n}"
  },
  "ImmediateDependants" : [ {
    "@type" : "alfa.rt.model.UdtVersionedName",
    "FullyQualifiedName" : "FpML5.pretrade.ExceptionMessageHeader",
    "UdtType" : "recordType"
  }, {
    "@type" : "alfa.rt.model.UdtVersionedName",
    "FullyQualifiedName" : "FpML5.pretrade.NotificationMessageHeader",
    "UdtType" : "recordType"
  }, {
    "@type" : "alfa.rt.model.UdtVersionedName",
    "FullyQualifiedName" : "FpML5.pretrade.RequestMessageHeader",
    "UdtType" : "recordType"
  }, {
    "@type" : "alfa.rt.model.UdtVersionedName",
    "FullyQualifiedName" : "FpML5.pretrade.ResponseMessageHeader",
    "UdtType" : "recordType"
  } ],
  "AllFields" : {
    "partyReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Identifies that party that has ownership of this information.",
      "Name" : "partyReference",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.pretrade.PartyReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/pt/fpml-main-5-9.alfa",
        "line" : 8139
      }
    }
  },
  "LocalFieldNames" : [ "partyReference" ],
  "IsSynthetic" : false
}