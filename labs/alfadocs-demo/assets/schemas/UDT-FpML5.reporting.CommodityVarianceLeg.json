{
  "@type" : "alfa.rt.model.Record",
  "Doc" : "A type describing the variance leg of a commodity variance swap.",
  "Name" : {
    "@type" : "alfa.rt.model.UdtVersionedName",
    "FullyQualifiedName" : "FpML5.reporting.CommodityVarianceLeg",
    "UdtType" : "recordType"
  },
  "Includes" : [ ],
  "Source" : {
    "@type" : "alfa.rt.model.Union__ModelBaseNode_Source",
    "Contents" : "/#\n   A type describing the variance leg of a commodity variance swap.\n #/\nrecord FpML5.reporting.CommodityVarianceLeg {\n  # A reference to the party responsible for making the payments defined by this structure.\n  payerPartyReference : FpML5.reporting.PartyReference?\n\n  # A reference to the account responsible for making the payments defined by this structure.\n  payerAccountReference : FpML5.reporting.AccountReference?\n\n  # A reference to the party that receives the payments corresponding to this structure.\n  receiverPartyReference : FpML5.reporting.PartyReference?\n\n  # A reference to the account that receives the payments corresponding to this structure.\n  receiverAccountReference : FpML5.reporting.AccountReference?\n\n  # The Calculation Period dates for this leg of the trade where the Calculation Periods are all one day long. Only dates explicitly included determine the Calculation Periods and there is a Calculation Period for each date specified. As such one-day Calculation Period are typical a physically-settled emissions or metals trades it is expected that this element will not be used in performance swaps.\n  calculationDates : FpML5.reporting.AdjustableDates\n\n  # The Calculation Period start dates for this leg of the swap. This type is only intended to be used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the calculationPeriodsReference element should be used to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation Periods Schedule for that leg.\n  calculationPeriods : FpML5.reporting.AdjustableDates\n\n  # The Calculation Periods for this leg of the swap. This type is only intended to be used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the calculationPeriodsReference element should be used to point to the Calculation Periods on the other leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation Periods Schedule for that leg.\n  calculationPeriodsSchedule : FpML5.reporting.CommodityCalculationPeriodsSchedule\n\n  # A pointer style reference to the Calculation Periods defined on another leg.\n  calculationPeriodsReference : FpML5.reporting.CalculationPeriodsReference\n\n  # A pointer style reference to the Calculation Periods Schedule defined on another leg.\n  calculationPeriodsScheduleReference : FpML5.reporting.CalculationPeriodsScheduleReference\n\n  # A pointer style reference to single-day-duration Calculation Periods defined on another leg.\n  calculationPeriodsDatesReference : FpML5.reporting.CalculationPeriodsDatesReference\n\n  # The Payment Dates of the trade relative to the Calculation Periods.\n  relativePaymentDates : FpML5.reporting.CommodityRelativePaymentDates\n\n  # Dates on which payments will be made.\n  paymentDates : FpML5.reporting.AdjustableDatesOrRelativeDateOffset\n\n  # If present and true indicates that the Payment Date(s) are specified in the relevant master agreement.\n  masterAgreementPaymentDates : boolean\n\n  # Describes the swap's underlyer when it has only one asset component.\n  commodity : FpML5.reporting.Commodity\n\n  # Describes the swap's underlyer when it has multiple asset components.\n  commodityBasket : FpML5.reporting.CommodityBasket\n\n  # Specifies the notional amount of a commodity performance type swap. It is a currency-denominated value (i.e. price-times-quantity). In confirmations is also referred to as the Notional Quantity (sic, expressed in currency units), Notional Amount, Equity Notional Amount and, in the case of reinvesting swaps, Initial Notional Amount.\n  notionalAmount : FpML5.reporting.CommodityNotionalAmount\n\n  # A reference to the Return swap notional amount defined in another leg of the return swap.\n  notionalAmountReference : FpML5.reporting.CommodityNotionalAmountReference\n\n  # Specifies the variance strike price when this strike is expressed in variance units. Payments on the variance leg are equal to the national amount multiplied by the realized variance minus this variance strike price: notional amount * (realized variance - variance strike price).\n  varianceStrikePrice : decimal\n\n  # Specifies the volatility strike price when this strike is expressed in standard deviation units. Payments on the variance leg are equal to the national amount multiplied by the realized volatility squared minus the volatility strike price squared. Notional amount * (realized volatility^2 - volatility strike^2). Squaring the volatility strike price converts the volatility strike price into a variance strike price. Squaring the realized volatility converts realized volatility to realized variance.\n  volatilityStrikePrice : decimal\n\n  # Specifies, in relation to each Payment Date, the variance percentage which, when multiplied times the notional amount is the amount to which the Payment Date relates. For purposes of this representation the realized variance is: (annualizationFactor / N) * signma from i = 1 to N (ln (S sub (i+1)) / (S sub i)), where: ln is the natural logarithm, N is the number of pricing dates, S sub i is the relevant price on the observation date i. If nAdjustment is 'true' then the denominator of the annualization factor is (N - 1) rather than N. If realized volatility is the performance metric in a variance swap rather than realized variance then the square root of the formula above will appear in the confirmation.\n  varianceCalculation : FpML5.reporting.CommodityVarianceCalculation?\n\n  id : string?\n\n}"
  },
  "AllFields" : {
    "payerPartyReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A reference to the party responsible for making the payments defined by this structure.",
      "Name" : "payerPartyReference",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.PartyReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2293
      }
    },
    "payerAccountReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A reference to the account responsible for making the payments defined by this structure.",
      "Name" : "payerAccountReference",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.AccountReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2296
      }
    },
    "receiverPartyReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A reference to the party that receives the payments corresponding to this structure.",
      "Name" : "receiverPartyReference",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.PartyReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2299
      }
    },
    "receiverAccountReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A reference to the account that receives the payments corresponding to this structure.",
      "Name" : "receiverAccountReference",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.AccountReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2302
      }
    },
    "calculationDates" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "The Calculation Period dates for this leg of the trade where the Calculation Periods are all one day long. Only dates explicitly included determine the Calculation Periods and there is a Calculation Period for each date specified. As such one-day Calculation Period are typical a physically-settled emissions or metals trades it is expected that this element will not be used in performance swaps.",
      "Name" : "calculationDates",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.AdjustableDates",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.AdjustableDates",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.AdjustableDates",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2305
      }
    },
    "calculationPeriods" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "The Calculation Period start dates for this leg of the swap. This type is only intended to be used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the calculationPeriodsReference element should be used to point to the Calculation Periods on that leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation Periods Schedule for that leg.",
      "Name" : "calculationPeriods",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.AdjustableDates",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.AdjustableDates",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.AdjustableDates",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2308
      }
    },
    "calculationPeriodsSchedule" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "The Calculation Periods for this leg of the swap. This type is only intended to be used if the Calculation Periods differ on each leg. If Calculation Periods mirror another leg, then the calculationPeriodsReference element should be used to point to the Calculation Periods on the other leg - or the calculationPeriodsScheduleReference can be used to point to the Calculation Periods Schedule for that leg.",
      "Name" : "calculationPeriodsSchedule",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.CommodityCalculationPeriodsSchedule",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.CommodityCalculationPeriodsSchedule",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.CommodityCalculationPeriodsSchedule",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2311
      }
    },
    "calculationPeriodsReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A pointer style reference to the Calculation Periods defined on another leg.",
      "Name" : "calculationPeriodsReference",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.CalculationPeriodsReference",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.CalculationPeriodsReference",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.CalculationPeriodsReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2314
      }
    },
    "calculationPeriodsScheduleReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A pointer style reference to the Calculation Periods Schedule defined on another leg.",
      "Name" : "calculationPeriodsScheduleReference",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.CalculationPeriodsScheduleReference",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.CalculationPeriodsScheduleReference",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.CalculationPeriodsScheduleReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2317
      }
    },
    "calculationPeriodsDatesReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A pointer style reference to single-day-duration Calculation Periods defined on another leg.",
      "Name" : "calculationPeriodsDatesReference",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.CalculationPeriodsDatesReference",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.CalculationPeriodsDatesReference",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.CalculationPeriodsDatesReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2320
      }
    },
    "relativePaymentDates" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "The Payment Dates of the trade relative to the Calculation Periods.",
      "Name" : "relativePaymentDates",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.CommodityRelativePaymentDates",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.CommodityRelativePaymentDates",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.CommodityRelativePaymentDates",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2323
      }
    },
    "paymentDates" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Dates on which payments will be made.",
      "Name" : "paymentDates",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.AdjustableDatesOrRelativeDateOffset",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.AdjustableDatesOrRelativeDateOffset",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.AdjustableDatesOrRelativeDateOffset",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2326
      }
    },
    "masterAgreementPaymentDates" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "If present and true indicates that the Payment Date(s) are specified in the relevant master agreement.",
      "Name" : "masterAgreementPaymentDates",
      "DataType" : {
        "@type" : "alfa.rt.model.ScalarDataType",
        "ScalarType" : "booleanType"
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2329
      }
    },
    "commodity" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Describes the swap's underlyer when it has only one asset component.",
      "Name" : "commodity",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.Commodity",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.Commodity",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.Commodity",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2332
      }
    },
    "commodityBasket" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Describes the swap's underlyer when it has multiple asset components.",
      "Name" : "commodityBasket",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.CommodityBasket",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.CommodityBasket",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.CommodityBasket",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2335
      }
    },
    "notionalAmount" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Specifies the notional amount of a commodity performance type swap. It is a currency-denominated value (i.e. price-times-quantity). In confirmations is also referred to as the Notional Quantity (sic, expressed in currency units), Notional Amount, Equity Notional Amount and, in the case of reinvesting swaps, Initial Notional Amount.",
      "Name" : "notionalAmount",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.CommodityNotionalAmount",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.CommodityNotionalAmount",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.CommodityNotionalAmount",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2338
      }
    },
    "notionalAmountReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A reference to the Return swap notional amount defined in another leg of the return swap.",
      "Name" : "notionalAmountReference",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.reporting.CommodityNotionalAmountReference",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.reporting.CommodityNotionalAmountReference",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.CommodityNotionalAmountReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2341
      }
    },
    "varianceStrikePrice" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Specifies the variance strike price when this strike is expressed in variance units. Payments on the variance leg are equal to the national amount multiplied by the realized variance minus this variance strike price: notional amount * (realized variance - variance strike price).",
      "Name" : "varianceStrikePrice",
      "DataType" : {
        "@type" : "alfa.rt.model.ScalarDataType",
        "ScalarType" : "decimalType"
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2344
      }
    },
    "volatilityStrikePrice" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Specifies the volatility strike price when this strike is expressed in standard deviation units. Payments on the variance leg are equal to the national amount multiplied by the realized volatility squared minus the volatility strike price squared. Notional amount * (realized volatility^2 - volatility strike^2). Squaring the volatility strike price converts the volatility strike price into a variance strike price. Squaring the realized volatility converts realized volatility to realized variance.",
      "Name" : "volatilityStrikePrice",
      "DataType" : {
        "@type" : "alfa.rt.model.ScalarDataType",
        "ScalarType" : "decimalType"
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2347
      }
    },
    "varianceCalculation" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Specifies, in relation to each Payment Date, the variance percentage which, when multiplied times the notional amount is the amount to which the Payment Date relates. For purposes of this representation the realized variance is: (annualizationFactor / N) * signma from i = 1 to N (ln (S sub (i+1)) / (S sub i)), where: ln is the natural logarithm, N is the number of pricing dates, S sub i is the relevant price on the observation date i. If nAdjustment is 'true' then the denominator of the annualization factor is (N - 1) rather than N. If realized volatility is the performance metric in a variance swap rather than realized variance then the square root of the formula above will appear in the confirmation.",
      "Name" : "varianceCalculation",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.reporting.CommodityVarianceCalculation",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2350
      }
    },
    "id" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "id",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "ScalarType" : "stringType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rep/fpml-main-5-9.alfa",
        "line" : 2353
      }
    }
  },
  "LocalFieldNames" : [ "payerPartyReference", "payerAccountReference", "receiverPartyReference", "receiverAccountReference", "calculationDates", "calculationPeriods", "calculationPeriodsSchedule", "calculationPeriodsReference", "calculationPeriodsScheduleReference", "calculationPeriodsDatesReference", "relativePaymentDates", "paymentDates", "masterAgreementPaymentDates", "commodity", "commodityBasket", "notionalAmount", "notionalAmountReference", "varianceStrikePrice", "volatilityStrikePrice", "varianceCalculation", "id" ],
  "IsSynthetic" : false
}