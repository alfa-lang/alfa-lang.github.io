{
  "@type" : "alfa.rt.model.Record",
  "Name" : {
    "@type" : "alfa.rt.model.UdtVersionedName",
    "FullyQualifiedName" : "FpML5.confirmation.FxTargetLeverage",
    "UdtType" : "recordType"
  },
  "Includes" : [ ],
  "Source" : {
    "@type" : "alfa.rt.model.Union__ModelBaseNode_Source",
    "Contents" : "record FpML5.confirmation.FxTargetLeverage {\n  # Condition in which leverage applies.\n  condition : string\n\n  # Level expressed as a level with optional steps different from strike, pivot, or barrier.\n  level : FpML5.confirmation.FxLevel\n\n  # Reference to a strike defined within the FX product.\n  strikeReference : FpML5.confirmation.FxStrikeReference\n\n  # Reference to the pivot defined within the FX product.\n  pivotReference : FpML5.confirmation.FxPivotReference\n\n  # Reference to a perExpiryBarrier component to indicate theat the bound of the region is defined by the barrier component.\n  barrierReference : FpML5.confirmation.FxComplexBarrierBaseReference\n\n  # Reference to a level defined within the FX product.\n  levelReference : FpML5.confirmation.FxLevelReference\n\n  # Leverage rate with optional steps. Format is 2 for 200%.\n  ratio : FpML5.confirmation.Schedule\n\n  # Leveraged notional expressed as amount with optional steps.\n  notionalAmount : FpML5.confirmation.NonNegativeAmountSchedule\n\n  # The opposite currency amount of the Target.\n  counterCurrencyAmount : FpML5.confirmation.FxCounterCurrencyAmount?\n\n  id : string?\n\n}"
  },
  "ImmediateDependants" : [ {
    "@type" : "alfa.rt.model.UdtVersionedName",
    "FullyQualifiedName" : "FpML5.confirmation.FxTargetLinearPayoffRegion",
    "UdtType" : "recordType"
  } ],
  "AllFields" : {
    "condition" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Condition in which leverage applies.",
      "Name" : "condition",
      "DataType" : {
        "@type" : "alfa.rt.model.ScalarDataType",
        "ScalarType" : "stringType"
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1689
      }
    },
    "level" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Level expressed as a level with optional steps different from strike, pivot, or barrier.",
      "Name" : "level",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.confirmation.FxLevel",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.confirmation.FxLevel",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.confirmation.FxLevel",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1692
      }
    },
    "strikeReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Reference to a strike defined within the FX product.",
      "Name" : "strikeReference",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.confirmation.FxStrikeReference",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.confirmation.FxStrikeReference",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.confirmation.FxStrikeReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1695
      }
    },
    "pivotReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Reference to the pivot defined within the FX product.",
      "Name" : "pivotReference",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.confirmation.FxPivotReference",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.confirmation.FxPivotReference",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.confirmation.FxPivotReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1698
      }
    },
    "barrierReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Reference to a perExpiryBarrier component to indicate theat the bound of the region is defined by the barrier component.",
      "Name" : "barrierReference",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.confirmation.FxComplexBarrierBaseReference",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.confirmation.FxComplexBarrierBaseReference",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.confirmation.FxComplexBarrierBaseReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1701
      }
    },
    "levelReference" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Reference to a level defined within the FX product.",
      "Name" : "levelReference",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.confirmation.FxLevelReference",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.confirmation.FxLevelReference",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.confirmation.FxLevelReference",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1704
      }
    },
    "ratio" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Leverage rate with optional steps. Format is 2 for 200%.",
      "Name" : "ratio",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.confirmation.Schedule",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.confirmation.Schedule",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.confirmation.Schedule",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1707
      }
    },
    "notionalAmount" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Leveraged notional expressed as amount with optional steps.",
      "Name" : "notionalAmount",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.confirmation.NonNegativeAmountSchedule",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.confirmation.NonNegativeAmountSchedule",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.confirmation.NonNegativeAmountSchedule",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1710
      }
    },
    "counterCurrencyAmount" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "The opposite currency amount of the Target.",
      "Name" : "counterCurrencyAmount",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.confirmation.FxCounterCurrencyAmount",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1713
      }
    },
    "id" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "id",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "ScalarType" : "stringType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/conf/fpml-main-5-9.alfa",
        "line" : 1716
      }
    }
  },
  "LocalFieldNames" : [ "condition", "level", "strikeReference", "pivotReference", "barrierReference", "levelReference", "ratio", "notionalAmount", "counterCurrencyAmount", "id" ],
  "IsSynthetic" : false
}