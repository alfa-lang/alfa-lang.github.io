{
  "@type" : "alfa.rt.model.Record",
  "Name" : {
    "@type" : "alfa.rt.model.UdtVersionedName",
    "FullyQualifiedName" : "FpML5.recordkeeping.NonpublicExecutionReportRetracted",
    "UdtType" : "recordType"
  },
  "Includes" : [ ],
  "Source" : {
    "@type" : "alfa.rt.model.Union__ModelBaseNode_Source",
    "Contents" : "record FpML5.recordkeeping.NonpublicExecutionReportRetracted {\n  header : FpML5.recordkeeping.RequestMessageHeader?\n\n  # A list of validation sets the sender asserts the document is valid with respect to.\n  validation : string?\n\n  # An optional identifier used to correlate between related processes\n  parentCorrelationId : string?\n\n  # A qualified identifier used to correlate between messages\n  correlationId : string?\n\n  # A numeric value that can be used to order messages with the same correlation identifier from the same sender.\n  sequenceNumber : int( 1, * )?\n\n  # Indicates which party (or parties) (and accounts) a trade or event is being processed for. Normally there will only be a maximum of 2 parties, but in the case of a novation there could be a transferor, transferee, remaining party, and other remaining party. Also, in the context of a trade package there could be several parties for which limit check is requested, necessitating multiple onBehalfOf elements. Except for these cases, there should be no more than two onBehalfOf references in a message.\n  onBehalfOf : FpML5.recordkeeping.OnBehalfOf?\n\n  originatingEvent : string?\n\n  trade : FpML5.recordkeeping.Trade\n\n  # This is provided to support snapshot reporting that requires trading history. Some implementations are using the \"trade\" event to report the current snapshot of a contract. In these cases it may also be necessary to report the most recent trading event to support regulatory reporting mandates. For this reason the tradingEvent is provided to allow that event to be attached to the trade report.\n  tradingEvent : FpML5.recordkeeping.TradingEventSummary?\n\n  amendment : FpML5.recordkeeping.TradeAmendmentContent\n\n  increase : FpML5.recordkeeping.TradeNotionalChange\n\n  # This may be used to describe why a trade was terminated.\n  terminatingEvent : string?\n\n  termination : FpML5.recordkeeping.TradeNotionalChange\n\n  novation : FpML5.recordkeeping.TradeNovationContent\n\n  withdrawal : FpML5.recordkeeping.Withdrawal\n\n  change : FpML5.recordkeeping.TradeChangeContent\n\n  # A structure describing an option exercise event. The optionExercise event supports partial exercise (specify the number of options or amount to exercise), full exercise (use fullExercise flag), as well as the option to request options not to be exercised.\n  optionExercise : FpML5.recordkeeping.OptionExercise\n\n  # A structure describing an option expiring event (i.e. passing its last exercise time and becoming worthless.)\n  optionExpiry : FpML5.recordkeeping.OptionExpiry\n\n  # A structure describing knock in, knock out, touch and no touch events.\n  optionEvent : FpML5.recordkeeping.OptionEvent\n\n  # The additionalEvent element is an extension/substitution point to customize FpML and add additional events.\n  additionalEvent : FpML5.recordkeeping.AdditionalEvent\n\n  primaryAssetClass : string?\n\n  tradeIdentifier : FpML5.recordkeeping.PartyTradeIdentifier?\n\n  # Individual parties should only use a single event identifier to identify a retraction. Platforms providing services on behalf of both parties in a transaction may provide event identifiers for both parties; in this case it is up to the recipient (the trade repository) to validate that the event IDs refer to the same event.\n  eventIdentifier : FpML5.recordkeeping.BusinessEventIdentifier?\n\n  # This may be used to identify one or more parties that perform a role within the transaction. If this is within a partyTradeInformation block, the related party performs the role with respect to the party identifie by the \"partyReference\" in the partyTradeInformation block.\n  relatedParty : FpML5.recordkeeping.RelatedParty?\n\n  # Parties can perform multiple roles in a trade lifecycle. For example, the principal parties obligated to make payments from time to time during the term of the trade, but may include other parties involved in, or incidental to, the trade, such as parties acting in the role of novation transferor/transferee, broker, calculation agent, etc. In FpML roles are defined in multiple places within a document.\n  party : FpML5.recordkeeping.Party?\n\n  # Optional account information used to precisely define the origination and destination of financial instruments.\n  account : FpML5.recordkeeping.Account?\n\n  fpmlVersion : string\n\n  expectedBuild : int( 1, * )?\n\n  actualBuild : int( 1, * )?\n\n}"
  },
  "AllFields" : {
    "header" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "header",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.RequestMessageHeader",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7516
      }
    },
    "validation" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A list of validation sets the sender asserts the document is valid with respect to.",
      "Name" : "validation",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "ScalarType" : "stringType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7518
      }
    },
    "parentCorrelationId" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "An optional identifier used to correlate between related processes",
      "Name" : "parentCorrelationId",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "ScalarType" : "stringType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7521
      }
    },
    "correlationId" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A qualified identifier used to correlate between messages",
      "Name" : "correlationId",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "ScalarType" : "stringType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7524
      }
    },
    "sequenceNumber" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A numeric value that can be used to order messages with the same correlation identifier from the same sender.",
      "Name" : "sequenceNumber",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "min" : {
            "@type" : "alfa.rt.model.RangeValue",
            "intValue" : 1
          },
          "ScalarType" : "intType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7527
      }
    },
    "onBehalfOf" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Indicates which party (or parties) (and accounts) a trade or event is being processed for. Normally there will only be a maximum of 2 parties, but in the case of a novation there could be a transferor, transferee, remaining party, and other remaining party. Also, in the context of a trade package there could be several parties for which limit check is requested, necessitating multiple onBehalfOf elements. Except for these cases, there should be no more than two onBehalfOf references in a message.",
      "Name" : "onBehalfOf",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.OnBehalfOf",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7530
      }
    },
    "originatingEvent" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "originatingEvent",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "ScalarType" : "stringType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7533
      }
    },
    "trade" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "trade",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.Trade",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.Trade",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.Trade",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7535
      }
    },
    "tradingEvent" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "This is provided to support snapshot reporting that requires trading history. Some implementations are using the \"trade\" event to report the current snapshot of a contract. In these cases it may also be necessary to report the most recent trading event to support regulatory reporting mandates. For this reason the tradingEvent is provided to allow that event to be attached to the trade report.",
      "Name" : "tradingEvent",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.TradingEventSummary",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7537
      }
    },
    "amendment" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "amendment",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.TradeAmendmentContent",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.TradeAmendmentContent",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.TradeAmendmentContent",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7540
      }
    },
    "increase" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "increase",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.TradeNotionalChange",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.TradeNotionalChange",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.TradeNotionalChange",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7542
      }
    },
    "terminatingEvent" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "This may be used to describe why a trade was terminated.",
      "Name" : "terminatingEvent",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "ScalarType" : "stringType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7544
      }
    },
    "termination" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "termination",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.TradeNotionalChange",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.TradeNotionalChange",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.TradeNotionalChange",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7547
      }
    },
    "novation" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "novation",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.TradeNovationContent",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.TradeNovationContent",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.TradeNovationContent",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7549
      }
    },
    "withdrawal" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "withdrawal",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.Withdrawal",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.Withdrawal",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.Withdrawal",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7551
      }
    },
    "change" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "change",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.TradeChangeContent",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.TradeChangeContent",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.TradeChangeContent",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7553
      }
    },
    "optionExercise" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A structure describing an option exercise event. The optionExercise event supports partial exercise (specify the number of options or amount to exercise), full exercise (use fullExercise flag), as well as the option to request options not to be exercised.",
      "Name" : "optionExercise",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.OptionExercise",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.OptionExercise",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.OptionExercise",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7555
      }
    },
    "optionExpiry" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A structure describing an option expiring event (i.e. passing its last exercise time and becoming worthless.)",
      "Name" : "optionExpiry",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.OptionExpiry",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.OptionExpiry",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.OptionExpiry",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7558
      }
    },
    "optionEvent" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "A structure describing knock in, knock out, touch and no touch events.",
      "Name" : "optionEvent",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.OptionEvent",
        "UdtType" : "recordType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.OptionEvent",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.OptionEvent",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7561
      }
    },
    "additionalEvent" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "The additionalEvent element is an extension/substitution point to customize FpML and add additional events.",
      "Name" : "additionalEvent",
      "DataType" : {
        "@type" : "alfa.rt.model.UdtDataType",
        "FullyQualifiedName" : "FpML5.recordkeeping.AdditionalEvent",
        "UdtType" : "traitType"
      },
      "DeclTypeDefDataType" : {
        "@type" : "alfa.rt.model.TypeDefDataType",
        "TypeName" : "FpML5.recordkeeping.AdditionalEvent",
        "FinalType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.AdditionalEvent",
          "UdtType" : "traitType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7564
      }
    },
    "primaryAssetClass" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "primaryAssetClass",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "ScalarType" : "stringType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7567
      }
    },
    "tradeIdentifier" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "tradeIdentifier",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.PartyTradeIdentifier",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7569
      }
    },
    "eventIdentifier" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Individual parties should only use a single event identifier to identify a retraction. Platforms providing services on behalf of both parties in a transaction may provide event identifiers for both parties; in this case it is up to the recipient (the trade repository) to validate that the event IDs refer to the same event.",
      "Name" : "eventIdentifier",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.BusinessEventIdentifier",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7571
      }
    },
    "relatedParty" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "This may be used to identify one or more parties that perform a role within the transaction. If this is within a partyTradeInformation block, the related party performs the role with respect to the party identifie by the \"partyReference\" in the partyTradeInformation block.",
      "Name" : "relatedParty",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.RelatedParty",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7574
      }
    },
    "party" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Parties can perform multiple roles in a trade lifecycle. For example, the principal parties obligated to make payments from time to time during the term of the trade, but may include other parties involved in, or incidental to, the trade, such as parties acting in the role of novation transferor/transferee, broker, calculation agent, etc. In FpML roles are defined in multiple places within a document.",
      "Name" : "party",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.Party",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7577
      }
    },
    "account" : {
      "@type" : "alfa.rt.model.Field",
      "Doc" : "Optional account information used to precisely define the origination and destination of financial instruments.",
      "Name" : "account",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.UdtDataType",
          "FullyQualifiedName" : "FpML5.recordkeeping.Account",
          "UdtType" : "recordType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7580
      }
    },
    "fpmlVersion" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "fpmlVersion",
      "DataType" : {
        "@type" : "alfa.rt.model.ScalarDataType",
        "ScalarType" : "stringType"
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7583
      }
    },
    "expectedBuild" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "expectedBuild",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "min" : {
            "@type" : "alfa.rt.model.RangeValue",
            "intValue" : 1
          },
          "ScalarType" : "intType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7585
      }
    },
    "actualBuild" : {
      "@type" : "alfa.rt.model.Field",
      "Name" : "actualBuild",
      "DataType" : {
        "@type" : "alfa.rt.model.OptionalDataType",
        "ComponentType" : {
          "@type" : "alfa.rt.model.ScalarDataType",
          "min" : {
            "@type" : "alfa.rt.model.RangeValue",
            "intValue" : 1
          },
          "ScalarType" : "intType"
        }
      },
      "SrcLocation" : {
        "@type" : "alfa.rt.model.Location",
        "path" : "/Users/sadia/IdeaProjects/smt/utils/alfadocs/test/alfa/fpml/rk/fpml-main-5-9.alfa",
        "line" : 7587
      }
    }
  },
  "LocalFieldNames" : [ "header", "validation", "parentCorrelationId", "correlationId", "sequenceNumber", "onBehalfOf", "originatingEvent", "trade", "tradingEvent", "amendment", "increase", "terminatingEvent", "termination", "novation", "withdrawal", "change", "optionExercise", "optionExpiry", "optionEvent", "additionalEvent", "primaryAssetClass", "tradeIdentifier", "eventIdentifier", "relatedParty", "party", "account", "fpmlVersion", "expectedBuild", "actualBuild" ],
  "IsSynthetic" : false
}